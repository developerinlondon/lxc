{
  "Description" : "AWS CloudFormation Template for ElasticSearch: Simple template that will create a scalable ElasticSearch cluster with ec2 discovery behind an ELB.",

  "Parameters" : {

    "KeyName": {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "255",
      "AllowedPattern" : "[\\x20-\\x7E]*",
      "ConstraintDescription" : "can contain only ASCII characters.",
      "Default": "mesos"
    },

    "InstanceType" : {
      "Description" : "ElasticSearch Node",
      "Type" : "String",
      "Default" : "r3.large",
      "AllowedValues" : [ "r3.large", "t1.micro", "m1.small", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge","m3.xlarge", "m3.2xlarge", "c1.medium", "c1.xlarge", "cc1.4xlarge", "r3.4xlarge"],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },

    "SSHLocation" : {
      "Description" : " The IP address range that can be used to SSH to the EC2 instances",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },


    "InstanceId": {
      "Description" : "Id of the instance to use",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "255",
      "AllowedPattern" : "[\\x20-\\x7E]*",
      "ConstraintDescription" : "can contain only ASCII characters.",
      "Default": "ami-8c16bee4"
    },

    "ClusterSize" : {
      "Description" : "Number of ElasticSearch instances to launch",
      "Type" : "Number",
      "Default" : "3"
    }

  },

  "Resources" : {

    "ElasticLoadBalancer" : {
      "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties" : {
      "AvailabilityZones" : { "Fn::GetAZs" : "" },
        "Listeners" : [ { "LoadBalancerPort" : "9200", "InstancePort" : "9200", "Protocol" : "HTTP" } ],
        "HealthCheck" : {
          "Target" : "HTTP:9200/",
          "HealthyThreshold" : "3",
          "UnhealthyThreshold" : "5",
          "Interval" : "90",
          "Timeout" : "60"
        }
      }
    },

    "ElasticSearchServerGroup" : {
      "Type" : "AWS::AutoScaling::AutoScalingGroup",
      "Properties" : {
        "AvailabilityZones" : { "Fn::GetAZs" : ""},
        "LaunchConfigurationName" : { "Ref" : "ElasticSearchServer" },
        "MinSize" : "1",
        "MaxSize" : "10",
        "DesiredCapacity" : { "Ref" : "ClusterSize" },
        "LoadBalancerNames" : [ { "Ref" : "ElasticLoadBalancer" } ],
        "Tags" : [ { "Key" : "environment", "Value" : { "Ref" : "AWS::StackName" }, "PropagateAtLaunch" : "true" } ]
      }
    },

    "ElasticSearchServer": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",

      "Properties": {
        "ImageId" : { "Ref" : "InstanceId" },
        "InstanceType"   : { "Ref" : "InstanceType" },
        "SecurityGroups" : [ {"Ref" : "ElasticSearchSecurityGroup"} ],
        "KeyName"        : { "Ref" : "KeyName" }
      }
    },

    "ElasticSearchSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable ElasticSearch access",
        "SecurityGroupIngress" : [
          {"IpProtocol" : "tcp", "FromPort" : "9200", "ToPort" : "9200", "CidrIp" : "0.0.0.0/0"},
          {"IpProtocol" : "tcp", "FromPort" : "9300", "ToPort" : "9300", "CidrIp" : "0.0.0.0/0"},
          {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : { "Ref" : "SSHLocation"}}
        ]
      }
    }
  },

  "Outputs" : {
    "ElasticSearchServer" : {
      "Value" : { "Fn::Join" : ["", ["http://", { "Fn::GetAtt" : [ "ElasticLoadBalancer", "DNSName" ]}]] },
      "Description" : "URL for ElasticSearch endpoint"
    }
  }
}


