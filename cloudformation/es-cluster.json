{
  "Description" : "Cronycle ES Cluster",

  "Parameters" : {

    "KeyName": {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "255",
      "AllowedPattern" : "[\\x20-\\x7E]*",
      "ConstraintDescription" : "can contain only ASCII characters.",
      "Default": "mesos"
    },
    "Environment" : {
      "Default": "uat",
      "Type" : "String",
      "Description" : "The Environment for the current cluster"
    },

    "HostedZone" : {
      "Default": "cronycle.net",
      "Type" : "String",
      "Description" : "The DNS name of an existing Amazon Route 53 hosted zone"
    },
    "InstanceType" : {
      "Description" : "ElasticSearch Node",
      "Type" : "String",
      "Default" : "r3.large",
      "AllowedValues" : [ "r3.large", "t1.micro", "m1.small", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge","m3.xlarge", "m3.2xlarge", "c1.medium", "c1.xlarge", "cc1.4xlarge", "r3.4xlarge"],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },

    "SSHLocation" : {
      "Description" : " The IP address range that can be used to SSH to the EC2 instances",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },

    "BaseImage": {
      "Description" : "Id of the instance to use",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "255",
      "AllowedPattern" : "[\\x20-\\x7E]*",
      "ConstraintDescription" : "can contain only ASCII characters.",
      "Default": "ami-c05df6a8"
    },

    "ClusterSize" : {
      "Description" : "Number of ElasticSearch instances to launch",
      "Type" : "Number",
      "Default" : "3"
    }

  },

  "Resources" : {

    "IAMUser" : {
      "Type" : "AWS::IAM::User",
      "Properties" : {
        "Policies" : [{
          "PolicyName" : "IAMAccess",
          "PolicyDocument" : {
            "Statement": [ {
                "Effect": "Allow",
                "Action": "ec2:Describe*",
                "Resource": "*"
            } ]
          }
        }]
      }
    },

    "HostKeys" : {
      "Type" : "AWS::IAM::AccessKey",
      "Properties" : {
        "UserName" : { "Ref" : "IAMUser" }
      }
    },


    "DNSRecord" : {
      "Type" : "AWS::Route53::RecordSetGroup",
      "Properties" : {
        "HostedZoneName" : { "Fn::Join" : [ "", [{"Ref" : "HostedZone"}, "." ]]},
        "Comment" : "A record alias ",
        "RecordSets" : [
            {
              "Name" : { "Fn::Join" : [ "", [ { "Ref" : "Environment" }, ".es.cronycle.net" ]]},
              "Type" : "A",
              "AliasTarget" : {
                  "HostedZoneId" : { "Fn::GetAtt" : ["ElasticLoadBalancer", "CanonicalHostedZoneNameID"] },
                  "DNSName" : { "Fn::GetAtt" : ["ElasticLoadBalancer","CanonicalHostedZoneName"] }
              }
            },
            {
              "Name" : { "Fn::Join" : [ "", [ "*.", { "Ref" : "Environment" }, ".es.cronycle.net" ]]},
              "Type" : "A",
              "AliasTarget" : {
                  "HostedZoneId" : { "Fn::GetAtt" : ["ElasticLoadBalancer", "CanonicalHostedZoneNameID"] },
                  "DNSName" : { "Fn::GetAtt" : ["ElasticLoadBalancer","CanonicalHostedZoneName"] }
              }
            }
          ]
      }
    },

    "ElasticLoadBalancer" : {
      "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties" : {
      "AvailabilityZones" : { "Fn::GetAZs" : "" },
        "Listeners" : [ { "LoadBalancerPort" : "9200", "InstancePort" : "9200", "Protocol" : "HTTP" } ],
        "HealthCheck" : {
          "Target" : "HTTP:9200/",
          "HealthyThreshold" : "3",
          "UnhealthyThreshold" : "5",
          "Interval" : "90",
          "Timeout" : "60"
        }
      }
    },

    "ElasticSearchServerGroup" : {
      "Type" : "AWS::AutoScaling::AutoScalingGroup",
      "Properties" : {
        "AvailabilityZones" : { "Fn::GetAZs" : ""},
        "LaunchConfigurationName" : { "Ref" : "ElasticSearchServer" },
        "MinSize" : "1",
        "MaxSize" : "10",
        "DesiredCapacity" : { "Ref" : "ClusterSize" },
        "LoadBalancerNames" : [ { "Ref" : "ElasticLoadBalancer" } ],
        "Tags" : [
          { "Key" : "Name", "Value" : { "Ref" : "AWS::StackName" }, "PropagateAtLaunch" : "true" }
        ]
      }
    },

    "ElasticSearchServer": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",

      "Properties": {
        "ImageId" : { "Ref" : "BaseImage" },
        "InstanceType"   : { "Ref" : "InstanceType" },
        "SecurityGroups" : [ {"Ref" : "ElasticSearchSecurityGroup"} ],
        "KeyName"        : { "Ref" : "KeyName" },
        "UserData" : { "Fn::Base64": { "Fn::Join": [ "", [
          "#cloud-config\n",
          "---\n",
          "byobu_by_default: system\n",
          "write_files:\n",
          "- path: /etc/elasticsearch/elasticsearch.yml\n",
          "  permissions: 0644\n",
          "  owner: root:root\n",
          "  content: |\n",
          "    cluster:\n",
          "      name: ",{ "Ref" : "AWS::StackName" },"\n",
          "    path:\n",
          "      work: /tmp\n",
          "    plugin:\n",
          "      mandatory: cloud-aws\n",
          "    cloud:\n",
          "      aws:\n",
          "        access_key: ",{ "Ref" : "HostKeys" },"\n",
          "        secret_key: ",{"Fn::GetAtt": ["HostKeys", "SecretAccessKey"]},"\n",
          "      node:\n",
          "        auto_attributes: true\n",
          "    discovery:\n",
          "      type: ec2\n",
          "      zen.ping.multicast.enabled: false\n",
          "      host_type: private_ip\n",
          "      ec2:\n",
          "        group: ",{ "Ref" : "ElasticSearchSecurityGroup" },"\n",
          "        tag:\n",
          "          Name: ",{ "Ref" : "AWS::StackName" },"\n"
        ] ] } }
      }
    },

    "ElasticSearchSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable ElasticSearch access",
        "SecurityGroupIngress" : [
          {
            "IpProtocol" : "tcp", "FromPort" : "9200", "ToPort" : "9200", "CidrIp" : "0.0.0.0/0"},
          {
            "IpProtocol" : "tcp",
            "FromPort" : "9300",
            "ToPort" : "9300",
            "SourceSecurityGroupId": {
              "Fn::GetAtt": [
                "ElasticSearchSecurityGroup",
                "GroupId"
              ]
            }
          },

          {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : { "Ref" : "SSHLocation"}}
        ]
      }
    }
  },

  "Outputs" : {
    "ElasticSearchServer" : {
      "Value" : { "Fn::Join" : ["", ["http://", { "Fn::GetAtt" : [ "ElasticLoadBalancer", "DNSName" ]},":9200"]] },
      "Description" : "URL for ElasticSearch endpoint"
    }
  }
}


